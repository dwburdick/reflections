// What happens when you initialize a repository? Why do you need to do it?

git init initializes a new repository, adding a .git file that will hold metadata about future commits.

// How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is the group of files chosen to be included in the next commit -- and is not necessarily every file in the working directory. It can save time uploading and downloading as well as simplifying searches for changes in the future.

// How can you use the staging area to make sure you have one commit per logical change?

I can stage multiple files -- for example html and css -- that have related changes, and make sure that only those files are being committed at the current time.

// What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If I decide to radically change the layout -- or simply test a new layout for mobile or desktop -- it would be nice to be able to work on that separately over days or weeks while still maintaining the current site on the master branch.

// How do the diagrams help you visualize the branch structure?

It's easier to picture parent commits and potentially unreachable commits -- as well as how a parent commit may not be anywhere near the latest commit on the master branch.

// What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

One branch takes over for both, so that the most recent commit will have two parent commits -- one in each branch.